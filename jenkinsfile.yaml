pipelineConfiguration: 
  paas:
    namespace: front
    clusterEnv:  RIVADAVIA_POC
    projectDescription: 
    urlRegistryDev: https://642711691858.dkr.ecr.eu-west-1.amazonaws.com
    applicationName: rvdv-front
    timeoutOperations: 1800 
    registryCredentialsId: ecr-rivadavia-apikey
    helm:
      namespace: front
      name: rvdv-front
      tier: frontend
      deployment:
        replicas: 1
        revisionHistoryLimit: 3
        image: "642711691858.dkr.ecr.eu-west-1.amazonaws.com/rivadavia/node-image"
        version: "0.1"
        imagePullPolicy: Always
        containerPort: 80
        replicas: 1
        imagePullSecrets:
          name: ecr-rivadavia-apikey
      service:
        targetPort: 80
        type: LoadBalancer   
      env:
        nodeConfigPort: 80
        remoteRepositories: https://nexus.ust-global-spain.com/repository  
        repositoryId: devopspaas-npm-snapshots
        appGroupId: itaca
        appArtifactId: itaca-0.0.4.tgz
  nodejs: 
    contextDir: ./
    settings: devopspaas-npmrc
    test: test
    build: build
  artifactory: 
    project: devopspaas-npm-snapshots
    apiNpm: ""
    credential: devops-robot
  custom: 
    inputParams: true
    inputParamsFile: ./customParameters.groovy
    flow: false
    flowFile: path